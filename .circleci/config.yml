version: 2

refs:
  container: &container
    docker:
      - image: circleci/node@5.1.0
    working_directory: ~/repo
  steps:
    - &Versions
      run:
        name: Versions
        command: node -v && npm -v && yarn -v
    - &CacheRestore
      restore_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}
    - &Install
      run:
        name: Install Dependencies
        command: yarn install
    - &CacheSave
      save_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}
        paths:
          - ./node_modules
    - &Build
      run:
        name: Build
        command: yarn build
    - &Test
      run:
        name: Test
        command: yarn test
    - &Release
      run:
        name: Release
        command: yarn release
jobs:
  all:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *CacheRestore
      - *Install
      - *CacheSave
      - *Build
      - *Test
  next:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *CacheRestore
      - *Install
      - *CacheSave
      - *Build
      - *Test
      - run:
          name: Setup Github
          command: |
            git config --global user.email "criativo.modog@gmail.com"
            git config --global user.name "GabrielModog"
            git remote rm origin
            git remote add origin https://${GITHUB_TOKEN}@github.com/GabrielModog/useTimeMachine
      - *Release
  main:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *CacheRestore
      - *Install
      - *CacheSave
      - *Build
      - *Test
      - run:
          name: Setup Github
          command: |
            git config --global user.email "criativo.modog@gmail.com"
            git config --global user.name "GabrielModog"
            git remote rm origin
            git remote add origin https://${GITHUB_TOKEN}@github.com/GabrielModog/useTimeMachine
      - *Release

workflows:
  version: 2
  all:
    jobs:
      - all:
          context: common-env-vars
          filters:
            branches:
              ignore:
                - main
                - next
  next:
    jobs:
      - next:
          context: common-env-vars
          filters:
            branches:
              only: next
  main:
    jobs:
      - main:
          context: common-env-vars
          filters:
            branches:
              only: main
